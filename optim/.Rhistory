source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
print(parameters[,1])
print(result[,1])
length(result)
size(result)
dim(result)
dim(result)[2]
View(measurements_raw)
View(measurements_raw)
View(measurements_raw)
View(measurements_raw)
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
print(measurements_raw$variables[[1]]$y)
print(measurements_raw$variables[[i]]$y)
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
View(measurements_raw)
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
View(list_param)
View(measurements_raw)
View(measurements_raw)
source("~/Desktop/projet_imsvs/optim/optim.R")
distance_to_data<-function(param){
dt     = 2
Tmax   = 10
X0     = 1.6
P0     = 0
S0     = 9.7
FA0    = 0
E0     = 0
A0     = 0
# Define model time-steps
Time=seq(from=0,to=Tmax,by=dt)
# Define vectors for initial conditions and parameters
Init.cond=c(X0,P0,S0, FA0, E0, A0)
# Execute
result <- rk(Init.cond, Time, bac.model, param, method = "rk45dp7")
# Name columns for convenience
colnames(result) <- c("Time", "X", "P", "S", "FA", "E", "A")
# Quick look
head(result)
# compute total LSE error
err <- 0
measurements_raw$variables[[1]]$y <- 3.5/12 * measurements_raw$variables[[1]]$y
for (i in 2:dim(result)[2])
{
err = err + distance(result[,i], measurements_raw$variables[[i-1]]$y)
}
print(err)
}
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
source("~/Desktop/projet_imsvs/optim/optim.R")
